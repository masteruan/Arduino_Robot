/************************
Robot Sonar ver. 2.0
by Giovanni Gentile
http://www.0lab.it
Dicembre 2013
Creative Common Licence
Component:
Arduino UNO rev.3
Servo
Ultrasonic Sensor
*************************/

//Servo
#include 
Servo myServo;

//Sonar
#include 
#define TRIGGER_PIN  A2  // Arduino pin tied to trigger pin on the ultrasonic sensor.
#define ECHO_PIN     A1  // Arduino pin tied to echo pin on the ultrasonic sensor.
#define MAX_DISTANCE 200 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm.
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); // NewPing setup of pins and maximum distance.
int cm = 0;
int danger = 27;
int tiltok = 15;
int ping0 = 0;
int tilt = 0 ;
unsigned int uS = sonar.ping(); // Send ping, get ping time in microseconds (uS).
int ostacolo;

//Motori
int ENA = 3;
int IN1 = 4;
int IN2 = 2;

int ENB = 5;
int IN3 = 7;
int IN4 = 8;

void setup ()
{
  Serial.begin (115200);
  //Servo
  myServo.attach(12);
  //Inizializzo il servo
  myServo.write(30);
  delay(1000);
  myServo.write(160);
  delay(1000);
  myServo.write(90);

  //Motori
  pinMode (ENA, OUTPUT);
  pinMode (IN1, OUTPUT);
  pinMode (IN2, OUTPUT);
  pinMode (ENB, OUTPUT);
  pinMode (IN3, OUTPUT);
  pinMode (IN4, OUTPUT);

  //suono
  //tone(1, 100, 200);

}

void loop ()
{
  avanti();

//20 gradi  
  myServo.write(0);
  delay(600);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("20:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     Ssinistra();     Serial.println("Goto sinistra");     delay(200);     ferma();     delay(50);     avanti();     uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("20:");     Serial.println(ping0);     tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

//40 gradi  
  myServo.write(40);
  delay(400);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("40:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     Ssinistra();     Serial.println("Goto sinistra");     delay(200);     ferma();     delay(50);         avanti();     uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("40:");     Serial.println(ping0);      tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

//60 gradi  
  myServo.write(60);
  delay(400);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("60:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     Ssinistra();     Serial.println("Goto sinistra");     delay(200);     ferma();     delay(50);         avanti();     uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("60:");     Serial.println(ping0);      tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

//80 gradi  
  myServo.write(80);
  delay(400);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("80:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     indietro();     Serial.println("Goto sinistra");     delay(600);     ferma();     delay(50);         Sdestra();     delay(200);     avanti();     uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("80:");     Serial.println(ping0);      tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

//100 gradi  
  myServo.write(100);
  delay(400);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("100:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     indietro();     Serial.println("Goto destra");     delay(600);     ferma();     delay(50);         Ssinistra();     delay(200);     avanti();     uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("100:");     Serial.println(ping0);   tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

//120 gradi  
  myServo.write(120);
  delay(400);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("120:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     Sdestra();     Serial.println("Goto destra");     delay(200);     ferma();     delay(50);         avanti();     uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("120:");     Serial.println(ping0);   tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

//140 gradi  
  myServo.write(140);
  delay(400);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("140:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     Sdestra();     Serial.println("Goto destra");     delay(200);     ferma();     delay(50);         avanti();      uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("140:");     Serial.println(ping0);   tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

//160 gradi  
  myServo.write(160);
  delay(400);
  uS = sonar.ping();
  ping0 = (uS / US_ROUNDTRIP_CM);
  Serial.print("160:");
  Serial.println(ping0); 

  while(ping0 < danger)   {     Sdestra();     Serial.println("Goto destra");     delay(200);     ferma();     delay(50);         avanti();     uS = sonar.ping();     ping0 = (uS / US_ROUNDTRIP_CM);     Serial.print("160:");     Serial.println(ping0);   tilt ++;     if (tilt > tiltok)
    {
      indietro();
      Serial.println("Goto indietro");
      delay(1000);
      tilt = 0;
    }
  }
//fine

}

//Comandi movimento
void ferma ()
{
//lcd.clear();
//lcd.print("STOP!");
digitalWrite(IN1, LOW);
digitalWrite(IN2, LOW);
digitalWrite(IN3, LOW);
digitalWrite(IN4, LOW);
analogWrite(ENA, 0);
analogWrite(ENB, 0);
}

void indietro ()
{
//lcd.clear();
//lcd.print ("Indietro");
digitalWrite(IN1, HIGH);
digitalWrite(IN2, LOW);
digitalWrite(IN3, HIGH);
digitalWrite(IN4, LOW);
analogWrite(ENA, 150);
analogWrite(ENB, 150);
}

void avanti ()
{
//lcd.clear();  
//lcd.print ("Avanti");
digitalWrite(IN1, LOW);
digitalWrite(IN2, HIGH);
digitalWrite(IN3, LOW);
digitalWrite(IN4, HIGH);
analogWrite(ENA, 120);
analogWrite(ENB, 130);
}

void destra ()
{
digitalWrite(IN1, LOW);
digitalWrite(IN2, HIGH);
digitalWrite(IN3, LOW);
digitalWrite(IN4, HIGH);
analogWrite(ENA, 120);
analogWrite(ENB, 180);
}

void sinistra ()
{
digitalWrite(IN1, LOW);
digitalWrite(IN2, HIGH);
digitalWrite(IN3, LOW);
digitalWrite(IN4, HIGH);
analogWrite(ENA, 160);
analogWrite(ENB, 180);
}

void Sdestra ()
{
digitalWrite(IN1, LOW);
digitalWrite(IN2, HIGH);
digitalWrite(IN3, LOW);
digitalWrite(IN4, HIGH);
analogWrite(ENA, 120);
analogWrite(ENB, 0);
}

void Ssinistra ()
{
digitalWrite(IN1, LOW);
digitalWrite(IN2, HIGH);
digitalWrite(IN3, LOW);
digitalWrite(IN4, HIGH);
analogWrite(ENA, 0);
analogWrite(ENB, 120);
}
