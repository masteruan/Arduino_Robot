/************************
Robot IR 
Giovanni Gentile

http://www.0lab.it
August 2016
Creative Common Licence
ADD
Movimento.ini
Suono.ini
*************************/

#include <LiquidCrystal.h>

int tilt = 0;
int tiltOk = 20;

//Ciclo millis dichiarazioni
#define intervallo 1000
long previousMillis = 0;
#define intervallo2 3000
long previous2Millis = 0;

//LCD
LiquidCrystal lcd (50, 52, 48, 46, 44, 42);

//Audio
int piezo = 11;

//Sensori IR
int IRsx1 = A3;
int IRsx2 = A4;
int IRdx2 = A1;
int IRdx1 = A2;
int SIR = 0;
int Cdx = 0;
int Csx = 0;
int Front = 0;

//Motori
int ENA = 3;
int IN1 = 4;
int IN2 = 2;

int ENB = 5;
int IN3 = 7;
int IN4 = 8;


void setup ()
{
  Serial.begin (9600);
  
  //Motori
  pinMode (ENA, OUTPUT);
  pinMode (IN1, OUTPUT);
  pinMode (IN2, OUTPUT);
  pinMode (ENB, OUTPUT);
  pinMode (IN3, OUTPUT);
  pinMode (IN4, OUTPUT);
  
  //Sensori IR
  pinMode (IRsx1, INPUT);
  pinMode (IRsx2, INPUT);
  pinMode (IRdx1, INPUT);
  pinMode (IRdx2, INPUT);
  IRsx1 = 0;
  IRsx2 = 0;
  IRdx1 = 0;
  IRdx2 = 0;  

  //LCD
  lcd.begin(16, 2);
  lcd.print("Inizializzo");
  felice();
  delay(3000);
}

void loop ()
{ 
  //Sensori IR
  IRsx1 = digitalRead(A3);
  IRsx2 = digitalRead(A4);
  IRdx2 = digitalRead(A1);
  IRdx1 = digitalRead(A2);
  
  SIR = (IRsx1 + IRsx2 + IRdx1 + IRdx2);
  Cdx = (IRdx1 + IRdx2);
  Csx = (IRsx1 + IRsx2);
  Front = (IRsx1 + IRdx1);

  avanti();  
  //Ciclo millis
  //ogni secondo
  if (millis() - previousMillis > intervallo)
  {
    previousMillis = millis();
//DEBUGGING   
  //Debugging seriale IR
  Serial.println("_________________");
  Serial.print ("IRsx1: ");
  Serial.println (IRsx1);
  Serial.print ("IRsx2: ");
  Serial.println (IRsx2);
  Serial.print ("IRdx1: ");
  Serial.println (IRdx1);  
  Serial.print ("IRdx2: ");
  Serial.println (IRdx2);  
  Serial.print("Tilt: ");
  Serial.println (tilt);
  }
  //ogni 3 secondi
  if (millis() - previous2Millis > intervallo2)
  {
    previous2Millis = millis();
    tilt = 0;
  }
  
  //Ostacolo a destra
  if (IRdx2 != 1)
  {
    ferma();
    delay(30);
    Ssinistra();
    delay(50);
    tilt ++;
    if (tilt > tiltOk)
    {
      indietro();
      delay(2000);
      SSsinistra();
      delay(500);
      tilt = 0;
    }
  }
  
  //Ostacolo a sinistra
  else if (IRsx2 != 1)
  {
    ferma();
    delay(30);
    Sdestra();
    delay(50);
    tilt ++;    
    if (tilt > tiltOk)
    {
      indietro();
      delay(2000);
      SSdestra();
      delay(500);
      tilt = 0;
    }
  }

  //Ostacolo frontale destra
  else if (IRdx1 != 1)
  {
    ferma();
    delay(50);
    SSsinistra();
    delay(50);
    tilt ++;    
    if (tilt > tiltOk)
    {
      indietro();
      delay(2000);
      SSsinistra();
      delay(500);
      tilt = 0;
    }    
  } 
  //Ostacolo frontale sinistra
  else if (IRsx1 != 1)
  {
    ferma();
    delay(50);
    SSdestra();
    delay(50);
    tilt ++;    
    if (tilt > tiltOk)
    {
      indietro();
      delay(2000);
      SSdestra();
      delay(500);
      tilt = 0;
    }   
  } 
}
